#!/usr/bin/python3
# encoding:utf-8

import os
import sys
import json
import collections
from optparse import OptionParser 


# # 获取命令参数
parser = OptionParser()  
parser.add_option("-f", "--file", dest="file",  
                  help="write report to FILE", metavar="FILE",nargs=3)  
options, _ = parser.parse_args() 

# print(options.__dict__.get("file"))

for file in options.__dict__.get("file"):
    p , _ = file.strip().split('.')
# 加载json配置文件
    try:
        oss_dict = json.load(open(file))
    except:
        sys.stderr.write("json加载失败\n")
        sys.exit(1)

    # 有序字典
    oss_kv = {}
    oss_kv = collections.OrderedDict() 


    # print(oss_dict)
    oss_dicts = []
    for oss in oss_dict:
        oss_kv = collections.OrderedDict() 
        # print(oss)
        try:
            id = oss["id"]
            name = oss["name"]
            entry_ip = oss["entryIp"]
            operators = oss["operators"]
            entry_type = oss["entryType"]
            need_sync = oss["needSync"]
            device_num = oss["deviceNum"]
            # server_ip = oss["serverIp"]
            
        except:
            sys.stderr.write("json解析错误！\n")
        
        if id and entry_ip :
            oss_kv['id'] = id
            oss_kv['name'] = name
            # oss_kv['alias'] = alias
            oss_kv['entry_ip'] = entry_ip
            oss_kv['operators'] = operators
            oss_kv['entry_type'] = entry_type
            oss_kv['need_sync'] = need_sync
            # oss_kv['device_num'] = device_num
            # print(oss_kv)
            oss_dicts.append(oss_kv)
            # print(oss_dicts)  
            #通用
    path = "%s_kv.json" % p
    print(path)
    os.remove(file)
    with open (path, 'w') as f:
        json.dump(oss_dicts, f)

sys.exit(0)

